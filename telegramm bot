@bot.message_handler(content_types=['text'])
def send_welcome(message):
    if (message.text == '/reg'):
        add_case(message)
    else:    
        bot.reply_to(message,"Вы авторизированы как обычный пользователь. Для регистрации случая напишите /reg. Для проверки напишите /check")

@bot.message_handler(func=lambda m: True)
def add_case(message):
    if (message.text == '/reg'):
        bot.send_message(message.from_user.id,"Вам нужно будет ввести ФИО, номер телефона, номер своей банковской карты, номер карты мошенника, сумму и дату транзакции")
        bot.send_message(message.from_user.id,"Введите ФИО")
        bot.register_next_step_handler(message,reg_fullname)

def reg_fullname(message):
    global fullname
    fullname = message.text
    bot.send_message(message.from_user.id, "Введите свой номер телефона")
    bot.register_next_step_handler(message,reg_phone_number)

def reg_phone_number(message):
    global phone_number
    phone_number = int (message.text)
    bot.send_message(message.from_user.id,'Введите номер своей банковской карты (Слитно)')
    bot.register_next_step_handler(message,reg_your_cc_number)

def reg_your_cc_number(message):
    global your_cc_number
    your_cc_number = int(message.text)
    bot.send_message(message.from_user.id,'Введите номер карты мошенника (Слитно)')
    bot.register_next_step_handler(message,bin_indef)
    bot.register_next_step_handler(message,reg_fraud_cc)

def bin_indef(message):
    global fraud_card
    fraud_card = str(message.text)
    if fraud_card[0] == '2':
        bot.send_message(message.from_user.id,"Платежная система Мир")
    elif fraud_card[0] == '3':
        bot.send_message(message.from_user.id,"Платежная система American Express")
    elif fraud_card[0] == '4':
        bot.send_message(message.from_user.id,"Платежная система VISA")
    elif fraud_card[0] == '5':
        bot.send_message(message.from_user.id,"Платежная система American Express")
    elif fraud_card[0] == '6':
        bot.send_message(message.from_user.id,"Платежная система UnionPay")
    elif fraud_card[0] == '7':
        bot.send_message(message.from_user.id,"Платежная система JCB")

def reg_fraud_cc(message):
    global fraud_cc
    fraud_cc = int(message.text)
    bot.send_message(message.from_user.id,"Введите сумму транзакции")
    bot.register_next_step_handler(message,reg_value)

def reg_value(message):
    global value
    value = int(message.text)
    keyboard = types.InlineKeyboardMarkup()
    key_yes = types.InlineKeyboardButton(text = 'Все верно.',callback_data= 'yes')
    keyboard.add(key_yes)
    key_no = types.InlineKeyboardButton(text = 'Неверно.', callback_data='no')
    keyboard.add(key_no)
    question = 'Проверьте вашу заявку.''\nВас зовут : '+fullname+'\nНомер телефона : '+str(phone_number)+'\nНомер Вашей банковской карты : '+str(your_cc_number)+"\nНомер карты мошенника : "+str(fraud_cc)+"\nСумма транзакции : "+str(value)
    bot.send_message(message.from_user.id,text = question,reply_markup=keyboard)
    #bot.send_message(channel_id, question)


@bot.callback_query_handler(func = lambda call: True)

def callback_worker(call):
    question = 'Проверьте вашу заявку.''\nВас зовут : '+fullname+'\nНомер телефона : '+str(phone_number)+'\nНомер Вашей банковской карты : '+str(your_cc_number)+"\nНомер карты мошенника : "+str(fraud_cc)+"\nСумма транзакции : "+str(value)
    if (call.data == 'yes'):
        bot.send_message(call.message.from_user.id,'Спасибо за обращение.Заявка принята!')
        bot.send_message(call.message.channel_id.id, question)
    elif (call.data == 'no'):
        bot.send_message(call.message.chat.id,'Введите данные еще раз.')
        bot.send_message(call.message.chat.id, "Введите ФИО")
        bot.register_next_step_handler(call.message, reg_fullname)




bot.polling()
